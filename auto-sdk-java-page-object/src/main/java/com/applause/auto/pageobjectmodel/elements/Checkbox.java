/*
 *
 * Copyright Â© 2024 Applause App Quality, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.applause.auto.pageobjectmodel.elements;

import com.applause.auto.context.IPageObjectContext;
import com.applause.auto.data.enums.Platform;
import com.applause.auto.pageobjectmodel.base.BaseElement;
import com.applause.auto.pageobjectmodel.factory.LazyWebElement;
import io.appium.java_client.ios.IOSDriver;

/**
 * BaseElement subclass representing a Checkbox.
 *
 * @see com.applause.auto.pageobjectmodel.base.BaseElement
 */
public class Checkbox extends BaseElement {
  /**
   * Basic constructor for a Checkbox. Checkboxes generally should be generated by
   * PageObjectBuilder.
   *
   * @param element the LazyWebElement underlying this Checkbox
   * @param context the underlying context
   */
  public Checkbox(final LazyWebElement element, final IPageObjectContext context) {
    super(element, context);
  }

  /**
   * Checks if the Checkbox is checked.
   *
   * @return true if Checkbox is checked, otherwise, false
   */
  @SuppressWarnings({"PMD.AvoidDeeplyNestedIfStmts"})
  public boolean isChecked() {
    if (Platform.hasNativeFallback(this.context.getPlatform())) {
      if (this.context.getDriver() instanceof IOSDriver) {
        final var elementAttributeValue = this.underlying.getAttribute("value");
        if (elementAttributeValue != null) {
          return "1".equals(elementAttributeValue);
        }
        return false;
      }
      // assume android style
      return Boolean.parseBoolean(this.underlying.getAttribute("checked"));
    }
    return this.underlying.isSelected();
  }
}
