/*
 *
 * Copyright Â© 2024 Applause App Quality, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.applause.auto.pageobjectmodel.elements;

import com.applause.auto.context.IPageObjectContext;
import com.applause.auto.pageobjectmodel.base.BaseElement;
import com.applause.auto.pageobjectmodel.factory.LazyWebElement;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;

/**
 * BaseElement subclass representing some Text.
 *
 * @see com.applause.auto.pageobjectmodel.base.BaseElement
 */
public class Text extends BaseElement {
  /**
   * Basic constructor for a Text. Text objects generally should be generated by PageObjectBuilder.
   *
   * @param element the LazyWebElement underlying this Text
   * @param context the underlying context
   */
  public Text(final LazyWebElement element, final IPageObjectContext context) {
    super(element, context);
  }

  /**
   * Gets the text value of the Text element.
   *
   * @return String value of Text element
   */
  @SuppressWarnings("PMD.AvoidCatchingNPE")
  @SuppressFBWarnings("DCN_NULLPOINTER_EXCEPTION")
  public String getText() {
    try {
      return this.underlying.getText();
    } catch (NullPointerException npe) {
      logger.debug("Button has no text attribute. Returning empty string.");
      return "";
    }
  }
}
