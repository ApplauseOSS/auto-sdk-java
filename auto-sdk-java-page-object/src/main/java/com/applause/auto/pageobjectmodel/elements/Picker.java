/*
 *
 * Copyright Â© 2024 Applause App Quality, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.applause.auto.pageobjectmodel.elements;

import com.applause.auto.context.IPageObjectContext;
import com.applause.auto.pageobjectmodel.base.BaseElement;
import com.applause.auto.pageobjectmodel.base.LocatedBy;
import com.applause.auto.pageobjectmodel.factory.LazyWebElement;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;

/**
 * BaseElement subclass representing a Picker on a mobile device.
 *
 * @see com.applause.auto.pageobjectmodel.base.BaseElement
 */
public class Picker extends BaseElement {

  /**
   * Basic constructor for a Picker. Pickers generally should be generated by PageObjectBuilder.
   *
   * @param element the LazyWebElement underlying this Picker
   * @param context the web driver
   */
  public Picker(final LazyWebElement element, final IPageObjectContext context) {
    super(element, context);
  }

  /**
   * Gets the current value of the Picker.
   *
   * @return the current value of the Picker, as a string
   */
  public String getValue() {
    if (context.getDriver() instanceof IOSDriver) {
      return this.underlying.getAttribute("value");
    } else if (context.getDriver() instanceof AndroidDriver) {
      return this.underlying
          .findElement(LocatedBy.appiumClassName("android.widget.TextView"))
          .getText();
    }
    throw new UnsupportedOperationException(
        "Pickers are only supported on Android and iOS drivers.");
  }

  /**
   * Sets the current value of the Picker.
   *
   * @param value the value to set
   */
  public void setValue(final String value) {
    logger.debug(String.format("Setting picker wheel value to [%s].", value));
    if (context.getDriver() instanceof IOSDriver) {
      this.underlying.sendKeys(value);
    } else if (context.getDriver() instanceof AndroidDriver) {
      this.click();
      context
          .getDriver()
          .findElement(
              LocatedBy.androidUIAutomator(String.format("new UiSelector().text(\"%s\")", value)))
          .click();
    } else {
      throw new UnsupportedOperationException(
          "Pickers are only supported on Android and iOS drivers.");
    }
  }
}
