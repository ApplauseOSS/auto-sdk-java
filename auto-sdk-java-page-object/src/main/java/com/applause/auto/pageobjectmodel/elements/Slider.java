/*
 *
 * Copyright Â© 2024 Applause App Quality, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.applause.auto.pageobjectmodel.elements;

import com.applause.auto.context.IPageObjectContext;
import com.applause.auto.pageobjectmodel.base.BaseElement;
import com.applause.auto.pageobjectmodel.factory.LazyWebElement;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;

/**
 * BaseElement subclass representing a Picker on a mobile device.
 *
 * @see com.applause.auto.pageobjectmodel.base.BaseElement
 */
public class Slider extends BaseElement {
  /**
   * Basic constructor for a Slider. Sliders generally should be generated by PageObjectBuilder.
   *
   * @param element the LazyWebElement underlying this Slider
   * @param context the underlying context
   */
  public Slider(final LazyWebElement element, final IPageObjectContext context) {
    super(element, context);
  }

  /**
   * Set the level of the Slider. Extreme values, like 0, 50, and 100, are strongly recommended for
   * test consistency.
   *
   * @param level the level to set the slider, as an int from 1 to 100.
   */
  public void setLevel(int level) {
    if (level < 0 || level > 100) {
      throw new IllegalArgumentException(
          String.format("Invalid Slider level [%d]. Level must be between 0 and " + "100.", level));
    }
    logger.debug("Setting slider value to [{}].", level);
    if (context.getDriver() instanceof IOSDriver) {
      // iOS takes a double between 0 and 1
      this.underlying.sendKeys(Double.toString(level / 100.0));
    } else if (context.getDriver() instanceof AndroidDriver) {
      // Android takes an integer between 0 and 100
      this.underlying.sendKeys(Integer.toString(level));
    } else {
      throw new UnsupportedOperationException(
          "Sliders are only supported on Android and iOS drivers.");
    }
  }

  /**
   * Get the current level of the Slider.
   *
   * @return the level of the slider, as an int from 1 to 100
   */
  public int getLevel() {
    if (context.getDriver() instanceof IOSDriver) {
      // iOS returns an integer percentage as a string - like "60%"
      String value = this.underlying.getAttribute("value");
      return Integer.parseInt(value.substring(0, value.length() - 1));
    } else if (context.getDriver() instanceof AndroidDriver) {
      // Android returns a double between 0 and 100 - like 69.0
      return (int) Double.parseDouble(this.underlying.getText());
    } else {
      throw new UnsupportedOperationException(
          "Sliders are only supported on Android and iOS drivers.");
    }
  }
}
